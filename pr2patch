#!/usr/bin/env bash

function format_code ()
{
    wget https://raw.githubusercontent.com/psychocrypt/pr2patch/master/.clang-format >& /dev/null
    find . -regex '.*\.\(cpp\|hpp\|cc\|cxx\|h\|inl\)' -exec clang-format-8 -i -style=file {} \;
    rm -f .clang-format
}

function format_pr(){

    echo "process branch $1"
    format_code
    git commit -a -m "format code" >& /dev/null
}

function clean_branches()
{
    git checkout master -f 
    git branch -D pr_${1} 
    git branch -D pr_${1}_base 
}

pr_id=$1
patch_name=$2

git fetch origin
clean_branches ${pr_id} >& /dev/null

#query pr
git fetch origin pull/${pr_id}/head:pr_${pr_id} >& /dev/null

if [ $? -ne 0 ] ; then
	echo "pull request ${pr_id} not found" >&2
	exit 1
fi

last_merge_commit=$(git rev-list --parents -n 50 pr_${pr_id} | awk 'BEGIN{result=0}{if(NF==3 && result==0){print($1);result=1}}')
commits_of_pr=$(git rev-list ${last_merge_commit}..pr_${pr_id})


echo "last merge commit: $last_merge_commit"
echo "commits from pr:"
echo "$commits_of_pr"

git checkout $last_merge_commit -b pr_${pr_id}_base >& /dev/null
format_pr pr_${pr_id}_base

git checkout pr_${pr_id} >& /dev/null
format_pr pr_${pr_id}

git diff --no-prefix pr_${pr_id}_base > $patch_name


echo $patch_name >> ../overview_monero

echo "patch '$patch_name' created"
exit 0
